% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graph.R
\name{Graph}
\alias{Graph}
\title{Graph Class}
\description{
This class represents a graph with nodes and edges.
}
\section{Usage}{

\preformatted{
graph <- Graph$new(edge_from, edge_to, edge_cost, edge_dist, node_name, node_x, node_y, crs)
}
}

\section{Methods}{

\describe{
\item{edges()}{Returns a list of edges in the graph.}
\item{nodes()}{Returns a list of nodes in the graph.}
\item{node_dict()}{Returns a named list of node indices in the graph.}
\item{crs()}{Returns the CRS string of the graph.}
}
}

\examples{
\dontrun{
edge_from <- c("A", "A", "B", "C")
edge_to <- c("B", "C", "C", "D")
edge_cost <- c(1, 2, 3, 4)
edge_dist <- c(1, 2, 2, 1)
node_name <- c("A", "B", "C", "D")
node_x <- c(0, 1, 1, 2)
node_y <- c(0, 0, 1, 1)
crs <- "EPSG:4326"

graph <- Graph$new(edge_from, edge_to, edge_cost, edge_dist, node_name, node_x, node_y, crs)
print(graph$edges())
print(graph$nodes())
print(graph$node_dict())
print(graph$crs())
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{pointer}}{Pointer to the Graph object in C++.
Initialize Graph Object

Creates a new Graph object.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Graph-new}{\code{Graph$new()}}
\item \href{#method-Graph-edges}{\code{Graph$edges()}}
\item \href{#method-Graph-nodes}{\code{Graph$nodes()}}
\item \href{#method-Graph-node_dict}{\code{Graph$node_dict()}}
\item \href{#method-Graph-crs}{\code{Graph$crs()}}
\item \href{#method-Graph-print}{\code{Graph$print()}}
\item \href{#method-Graph-clone}{\code{Graph$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Graph-new"></a>}}
\if{latex}{\out{\hypertarget{method-Graph-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Graph$new(
  edge_from,
  edge_to,
  edge_cost,
  edge_dist,
  node_name,
  node_x,
  node_y,
  crs
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{edge_from}}{character vector of edge sources.}

\item{\code{edge_to}}{character vector of edge targets.}

\item{\code{edge_cost}}{numeric vector of edge costs.}

\item{\code{edge_dist}}{numeric vector of edge distances.}

\item{\code{node_name}}{character vector of node names.}

\item{\code{node_x}}{numeric vector of node x-coordinates.}

\item{\code{node_y}}{numeric vector of node y-coordinates.}

\item{\code{crs}}{character string of the CRS (coordinate reference system).
Get Edges

Returns a list of edges in the graph.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Graph-edges"></a>}}
\if{latex}{\out{\hypertarget{method-Graph-edges}{}}}
\subsection{Method \code{edges()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Graph$edges()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of edges with columns "from", "to", "cost", and "dist".
Get Nodes

Returns a list of nodes in the graph.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Graph-nodes"></a>}}
\if{latex}{\out{\hypertarget{method-Graph-nodes}{}}}
\subsection{Method \code{nodes()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Graph$nodes()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of nodes with columns "id", "x", and "y".
Get Node Dictionary

Returns a named list of node indices in the graph.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Graph-node_dict"></a>}}
\if{latex}{\out{\hypertarget{method-Graph-node_dict}{}}}
\subsection{Method \code{node_dict()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Graph$node_dict()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A named list of node indices, with node names as the names and node indices as the values.
Get CRS

Returns the CRS (coordinate reference system) string of the graph.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Graph-crs"></a>}}
\if{latex}{\out{\hypertarget{method-Graph-crs}{}}}
\subsection{Method \code{crs()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Graph$crs()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A character string of the CRS.
Print Graph Summary

Prints a summary of the graph object, including the number of nodes and edges.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Graph-print"></a>}}
\if{latex}{\out{\hypertarget{method-Graph-print}{}}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Graph$print()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Print
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Graph-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Graph-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Graph$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
