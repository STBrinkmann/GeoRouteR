% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/distance_matrix.R
\name{distance_matrix}
\alias{distance_matrix}
\title{Calculate isochrone using Dijkstra's algorithm}
\usage{
distance_matrix(Graph, from, to, mode = "time")
}
\arguments{
\item{Graph}{A Graph object, generated by \code{\link[GeoRouteR]{makegraph}}.}

\item{from}{A vector of node names representing the starting node(s).}

\item{to}{A vector of node names representing the starting node(s).}

\item{mode}{A character string; "time" or "distance".}
}
\value{
a data frame with three columns: "from" (the starting node), "to"
(a node in the isochrone), and "cost" (the cost of the path from the starting node to the node)
}
\description{
The algorithm finds the shortest path between pairs of nodes in a graph using
the A* search algorithm, which combines graph traversal with heuristic estimates to efficiently
guide the search towards the optimal solution.
}
\examples{
\dontrun{
edges <- data.frame(from = c("A", "A", "B", "C"),
                    to = c("B", "C", "C", "D"),
                    speed = c(10, 20, 40, 100),
                    length = c(1, 2, 2, 1),
                    oneway = c("FT", "B", "N", "TF"))

nodes <- data.frame(node = c("A", "B", "C", "D"),
                    X = c(0, 1, 1, 2),
                    Y = c(0, 0, 1, 1))

crs <- "EPSG:4326"

graph <- makegraph(edges, nodes, crs, directed = TRUE)

# Calculate distance_matrix for a graph object
distance_matrix <- distance_matrix(graph, from = "A", to = "B")
}
}
