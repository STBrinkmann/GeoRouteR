% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/isochrone.R
\name{isochrone}
\alias{isochrone}
\title{Calculate isochrone using Dijkstra's algorithm}
\usage{
isochrone(Graph, from, lim)
}
\arguments{
\item{Graph}{A Graph object, generated by \code{\link[GeoRouteR]{makegraph}}.}

\item{from}{A vector of node names representing the starting node(s).}

\item{lim}{A numeric value or vector of values representing the maximum cost(s) of the isochrone.}
}
\value{
a data frame with four columns: "from" (the starting node), "to"
(a node in the isochrone), "cost" (the cost of the path from the starting node to the node), and
"threshold" (based on the lim input).
}
\description{
This function calculates the isochrone for a set of starting nodes in a directed
graph using Dijkstra's algorithm. The isochrone is defined as the set of nodes that can be
reached from the starting nodes within a certain cost limit.
}
\examples{
\dontrun{
edges <- data.frame(from = c("A", "A", "B", "C"),
                    to = c("B", "C", "C", "D"),
                    speed = c(10, 20, 40, 100),
                    length = c(1, 2, 2, 1),
                    oneway = c("FT", "B", "N", "TF"))

nodes <- data.frame(node = c("A", "B", "C", "D"),
                    X = c(0, 1, 1, 2),
                    Y = c(0, 0, 1, 1))

crs <- "EPSG:4326"

graph <- makegraph(edges, nodes, crs, directed = TRUE)

# Calculate isochrones for a graph object
isochrones <- isochrone(graph, from = "A", lim = c(2, 6))
}
}
